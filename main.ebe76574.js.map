{"version":3,"sources":["scripts/main.js"],"names":["grid","document","querySelector","gridRows","rows","gridBody","parentNode","addCellButton","removeCellButton","addRowButton","removeRowButton","maxCells","minCells","allCells","nameOfTag","querySelectorAll","checkForAttributeDisabled","element","hasAttribute","checkMaxCellsAmount","tBody","limit","cells","length","checkMinCellsAmount","checkMaxRowsAmount","checkMinRowsAmount","addEventListener","forEach","row","newCell","createElement","append","isMaxColumns","isMinColumns","isRemoveCellButtonDisabled","setAttribute","removeAttribute","currentCells","step","i","remove","isAddCellButtonDisabled","newRow","currentCellsAmountInRow","appendChild","isMaxRows","isMinRows","isRemoveRowButtonDisabled","lastElementChild","isAddRowButtonDisabled"],"mappings":"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","file":"main.ebe76574.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst grid = document.querySelector('.field');\nconst gridRows = grid.rows;\nconst gridBody = document.querySelector('tr').parentNode;\n\nconst addCellButton = document.querySelector('.append-column');\nconst removeCellButton = document.querySelector('.remove-column');\nconst addRowButton = document.querySelector('.append-row');\nconst removeRowButton = document.querySelector('.remove-row');\n\nconst maxCells = 9;\nconst minCells = 3;\n\naddCellButton.addEventListener('click', () => {\n  [...gridRows].forEach(row => {\n    const newCell = document.createElement('td');\n\n    row.append(newCell);\n  });\n\n  const isMaxColumns = checkMaxCellsAmount(gridBody, maxCells);\n  const isMinColumns = checkMinCellsAmount(gridBody, minCells);\n  const isRemoveCellButtonDisabled = checkForAttributeDisabled(\n    removeCellButton\n  );\n\n  if (isMaxColumns) {\n    addCellButton.setAttribute('disabled', 'true');\n  }\n\n  if (!isMinColumns && isRemoveCellButtonDisabled) {\n    removeCellButton.removeAttribute('disabled');\n  }\n});\n\nremoveCellButton.addEventListener('click', () => {\n  const currentCells = allCells('td');\n  const step = gridBody.rows[0].cells.length;\n\n  for (let i = 0; i < currentCells.length; i += step) {\n    currentCells[i].remove();\n  }\n\n  const isMaxColumns = checkMaxCellsAmount(gridBody, maxCells);\n  const isMinColumns = checkMinCellsAmount(gridBody, minCells);\n  const isAddCellButtonDisabled = checkForAttributeDisabled(addCellButton);\n\n  if (isMinColumns) {\n    removeCellButton.setAttribute('disabled', 'true');\n  }\n\n  if (!isMaxColumns && isAddCellButtonDisabled) {\n    addCellButton.removeAttribute('disabled');\n  }\n});\n\naddRowButton.addEventListener('click', () => {\n  const newRow = document.createElement('tr');\n  const currentCellsAmountInRow = gridBody.rows[0].cells.length;\n\n  for (let i = 0; i < currentCellsAmountInRow; i++) {\n    const newCell = document.createElement('td');\n\n    newRow.appendChild(newCell);\n  }\n\n  gridBody.append(newRow);\n\n  const isMaxRows = checkMaxRowsAmount(gridBody, maxCells);\n  const isMinRows = checkMinRowsAmount(gridBody, minCells);\n  const isRemoveRowButtonDisabled = checkForAttributeDisabled(removeRowButton);\n\n  if (isMaxRows) {\n    addRowButton.setAttribute('disabled', 'true');\n  }\n\n  if (!isMinRows && isRemoveRowButtonDisabled) {\n    removeRowButton.removeAttribute('disabled');\n  }\n});\n\nremoveRowButton.addEventListener('click', () => {\n  gridBody.lastElementChild.remove();\n\n  const isMaxRows = checkMaxRowsAmount(gridBody, maxCells);\n  const isMinRows = checkMinRowsAmount(gridBody, minCells);\n  const isAddRowButtonDisabled = checkForAttributeDisabled(addRowButton);\n\n  if (isMinRows) {\n    removeRowButton.setAttribute('disabled', 'true');\n  }\n\n  if (!isMaxRows && isAddRowButtonDisabled) {\n    addRowButton.removeAttribute('disabled');\n  }\n});\n\nfunction allCells(nameOfTag) {\n  return document.querySelectorAll(`${nameOfTag}`);\n}\n\nfunction checkForAttributeDisabled(element) {\n  return element.hasAttribute('disabled');\n}\n\nfunction checkMaxCellsAmount(tBody, limit) {\n  if (tBody.rows[0].cells.length > limit) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkMinCellsAmount(tBody, limit) {\n  if (tBody.rows[0].cells.length < limit) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkMaxRowsAmount(tBody, limit) {\n  if (tBody.rows.length > limit) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction checkMinRowsAmount(tBody, limit) {\n  if (tBody.rows.length < limit) {\n    return true;\n  }\n\n  return false;\n}\n"]}